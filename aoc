#!/usr/bin/env ruby
require 'httparty'
require 'dotenv/load'
require 'thor'
require 'benchmark'
lib_files = File.join(File.dirname(__FILE__), 'lib', '*.rb')
src_files = File.join(File.dirname(__FILE__), 'src', '**', '*.rb')
Dir[lib_files].each { |file| require file }
Dir[src_files].each { |file| require file }

class Aoc < Thor
  include Thor::Actions

  desc 'bootstrap YEAR DAY', 'prepares a sample project for a given day: downloads the input & creates a sample source'
  def bootstrap(year, day)
    PuzzleInput.download_input(year, day)
    Template.create_source(year, day)
    Template.create_spec(year, day)
    puts "https://adventofcode.com/#{year}/day/#{day}"
  end

  desc 'run YEAR DAY', 'executes a given day/year'
  def run_day(year, day)
    part1(year, day)
    puts
    part2(year, day)
  end

  desc 'part1 YEAR DAY', 'executes the part1 for a given day/year'
  def part1(year, day)
    puzzle = PuzzleSource.initialize_puzzle(year, day)
    input = PuzzleInput.load(year, day)
    PuzzleSource.run_part('part 1') do
      puzzle.part1(input)
    end
  end

  desc 'part2 YEAR DAY', 'executes the part2 for a given day/year'
  def part2(year, day)
    puzzle = PuzzleSource.initialize_puzzle(year, day)
    input = PuzzleInput.load(year, day)
    PuzzleSource.run_part('part 2') do
      puzzle.part2(input)
    end
  end

  desc 'test YEAR DAY', 'runs the tests for a given day/year'
  def test(year, day)
    run("rspec #{PuzzleSpec.spec_source_path(year, day)}")
  end
end

Dotenv.require_keys('AOC_COOKIE')
Aoc.start
